{"version":3,"sources":["services/surveyServices.js","components/Homepage.js","components/Header.js","components/Notification.js","reducers/notificationReducer.js","components/CreateSurvey.js","components/Result-example.js","components/SingleSurvey.js","services/userServices.js","components/Register.js","components/Login.js","components/NotFound.js","App.js","store.js","index.js"],"names":["baseUrl","token","setToken","newToken","getToken","console","log","getAll","a","axios","get","response","data","getSingle","id","getResults","create","surveyObj","config","headers","Authorization","post","updateVotes","updatedObj","Homepage","useState","activeSurveys","setActiveSurveys","offSurveys","setOffSurveys","recentSurveys","setRecentSurveys","popularSurveys","setPopularSurveys","useEffect","surveyServices","then","surveys","popular","newestArr","sort","b","Date","created_at","slice","dateNow","onSurveys","filter","elem","deadline","off","className","src","alt","href","map","key","survey_name","Header","user","logoVisible","setLogoVisible","notification","useSelector","state","errors","length","infos","roleplay","style","visibility","icon","faUser","exact","to","activeClassName","onClick","window","localStorage","clear","location","reload","Notification","dispatch","useDispatch","notifications","display","justifyContent","padding","width","margin","info","setTimeout","type","content","faWindowClose","error","initialState","newInfo","newError","getId","Math","floor","random","reducer","action","concat","randomId","CreateSurvey","title","setTitle","questions","setQuestions","history","useHistory","submitForm","e","preventDefault","push","finalQuestions","question","choices","forEach","choice","name","isRequired","colCount","Boolean","finalJSON","JSON","stringify","survey","Array","isArray","message","onSubmit","value","onChange","target","index","inputName","err","updateQuestion","autoFocus","questionId","quest","removeQuestion","faTimesCircle","choiceIndex","inputChoice","placeholder","Error","choiceObj","updateChoice","questIndex","removeChoice","addChoice","Result","chartData","setChartData","chartQuestions","setChartQuestions","getRandomColor","leng","arr","color","toString","Set","question_name","finalArr","from","v","i","labels","score","datasets","label","backgroundColor","borderWidth","chart","options","responsive","responsiveAnimationDuration","SingleSurvey","props","complete","setComplete","voted","setVoted","json","setJson","resultsDisplay","setResultsDisplay","match","params","res","stringQuestions","parse","surveyString","surveyTitle","getItem","showCompletePage","onComplete","result","setItem","register","newObj","login","loginObj","Register","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","registerUser","userService","singleError","Login","signIn","setSignIn","NotFound","fontSize","marginTop","Survey","applyTheme","App","setUser","logged","path","component","patch","store","createStore","notificationReducer","ReactDOM","render","document","getElementById"],"mappings":"4OAEMA,EAAU,eAEZC,EAAQ,KAoCG,GACbC,SAnCe,SAACC,GAChBF,EAAK,iBAAaE,IAmClBC,SAhCe,WACfC,QAAQC,IAAIL,IAgCZM,OA7BU,uCAAG,4BAAAC,EAAA,sEACUC,IAAMC,IAAN,UAAaV,EAAb,SADV,cACPW,EADO,yBAENA,EAASC,MAFH,2CAAH,qDA8BVC,UAzBa,uCAAG,WAAOC,GAAP,eAAAN,EAAA,sEACOC,IAAMC,IAAN,UAAaV,EAAb,mBAA+Bc,IADtC,cACVH,EADU,yBAETA,EAASC,MAFA,2CAAH,sDA0BbG,WArBc,uCAAG,WAAOD,GAAP,eAAAN,EAAA,sEACMC,IAAMC,IAAN,UAAaV,EAAb,oBAAgCc,IADtC,cACXH,EADW,yBAEVA,EAASC,MAFC,2CAAH,sDAsBdI,OAjBU,uCAAG,WAAOC,GAAP,iBAAAT,EAAA,6DACPU,EAAS,CAAEC,QAAS,CAAEC,cAAenB,IAD9B,SAEUQ,IAAMY,KAAN,UAAcrB,EAAd,WAAgCiB,EAAWC,GAFrD,cAEPP,EAFO,yBAGNA,EAASC,MAHH,2CAAH,sDAkBVU,YAZe,uCAAG,WAAOC,GAAP,eAAAf,EAAA,sEACKC,IAAMY,KAAN,UAAcrB,EAAd,gBAAqCuB,GAD1C,cACZZ,EADY,yBAEXA,EAASC,MAFE,2CAAH,uDC8CFY,MA9Ef,WAAqB,IAAD,EACwBC,mBAAS,IADjC,mBACXC,EADW,KACIC,EADJ,OAEkBF,mBAAS,IAF3B,mBAEXG,EAFW,KAECC,EAFD,OAGwBJ,mBAAS,IAHjC,mBAGXK,EAHW,KAGIC,EAHJ,OAI0BN,mBAAS,IAJnC,mBAIXO,EAJW,KAIKC,EAJL,KAuBlB,OAlBAC,qBAAU,WACRC,EAAe5B,SAAS6B,MAAK,SAACzB,GAAc,IAClC0B,EAAqB1B,EAArB0B,QAASC,EAAY3B,EAAZ2B,QACXC,EAAYF,EACfG,MAAK,SAAChC,EAAGiC,GAAJ,OAAU,IAAIC,KAAKD,EAAEE,YAAc,IAAID,KAAKlC,EAAEmC,eACnDC,MAAM,EAAG,GACNC,EAAU,IAAIH,KACdI,EAAYT,EAAQU,QACxB,SAACC,GAAD,OAAU,IAAIN,KAAKM,EAAKC,UAAYJ,KAEhCK,EAAMb,EAAQU,QAAO,SAACC,GAAD,OAAUH,EAAU,IAAIH,KAAKM,EAAKC,aAC7DtB,EAAiBmB,GACjBjB,EAAcqB,GACdnB,EAAiB,GAAD,mBAAKD,GAAL,YAAuBS,KACvCN,EAAkB,GAAD,mBAAKD,GAAL,YAAwBM,UAG1C,IAED,yBAAKa,UAAU,aACb,yBACEC,IAAI,iBACJC,IAAI,sCACJF,UAAU,iBAEZ,uEANF,IAMkD,6BAChD,gJAEqD,KAChD,IACL,6BACA,oCACQ,uBAAGG,KAAK,WAAR,kBADR,MACgD,IAC9C,uBAAGA,KAAK,YAAR,oBAEF,6BAASH,UAAU,wBAAwBrC,GAAG,MAC5C,8CACCY,EAAc6B,KAAI,SAACP,GAAD,OACjB,yBAAKQ,IAAKR,EAAKlC,IACb,uBAAGwC,KAAI,6BAAwBN,EAAKlC,KAAOkC,EAAKS,kBAItD,6BAASN,UAAU,wBAAwBrC,GAAG,OAC5C,4CACCc,EAAW2B,KAAI,SAACP,GAAD,OACd,6BACE,uBAAGQ,IAAKR,EAAKlC,GAAIwC,KAAI,6BAAwBN,EAAKlC,KAC/CkC,EAAKS,kBAKd,6BAASN,UAAU,wBAAwBrC,GAAG,UAC5C,mDACCgB,EAAcyB,KAAI,SAACP,GAAD,OACjB,yBAAKQ,IAAKR,EAAKlC,IACb,uBAAGwC,KAAI,6BAAwBN,EAAKlC,KAAOkC,EAAKS,kBAItD,6BAASN,UAAU,wBAAwBrC,GAAG,WAC5C,oDACCkB,EAAeuB,KAAI,SAACP,GAAD,OAClB,yBAAKQ,IAAKR,EAAKlC,IACb,uBAAGwC,KAAI,6BAAwBN,EAAKlC,KAAOkC,EAAKS,oB,gBCH7CC,MA/Df,YAA2B,IAATC,EAAQ,EAARA,KAAQ,EACclC,oBAAS,GADvB,mBACjBmC,EADiB,KACJC,EADI,KAElBC,EAAeC,aAAY,SAACC,GAAD,OAAWA,KAa5C,OAXA9B,qBAAU,WACJ4B,EAAaG,OAAOC,OAAS,GAAKJ,EAAaK,MAAMD,OAAS,EAChEL,GAAe,GAEfA,GAAe,KAEhB,CAACC,EAAaG,OAAOC,OAAQJ,EAAaK,MAAMD,OAAQP,IAMzD,gCACE,yBAAKS,SAAS,cACZ,yBACEhB,IAAI,eACJC,IAAI,iBACJgB,MAAO,CAAEC,WAAYV,EAAc,UAAY,YAEjD,yBAAKT,UAAU,aACZQ,EACC,oCACE,4BAAQR,UAAU,aAChB,kBAAC,IAAD,CAAiBoB,KAAMC,MADzB,IACqCb,GAErC,kBAAC,IAAD,CAASc,OAAK,EAACC,GAAG,IAAIC,gBAAgB,cAAtC,YAGA,kBAAC,IAAD,CACEF,OAAK,EACLC,GAAG,qBACHC,gBAAgB,cAHlB,iBAQA,4BAAQxB,UAAU,eAAeyB,QA7B9B,WACbC,OAAOC,aAAaC,QACpBF,OAAOG,SAASC,WA2BN,YAKF,oCACE,kBAAC,IAAD,CAASR,OAAK,EAACC,GAAG,IAAIC,gBAAgB,cAAtC,YAGA,kBAAC,IAAD,CAASD,GAAG,YAAYC,gBAAgB,cAAxC,WAGA,kBAAC,IAAD,CAASD,GAAG,SAASC,gBAAgB,cAArC,gBCGCO,MAzDf,WACE,IAAMC,EAAWC,cACXC,EAAgBtB,aAAY,SAACC,GAAD,OAAWA,KAEvCK,EAAQ,CACZiB,QAAS,OACTC,eAAgB,gBAChBC,QAAS,GACTC,MAAO,MACPC,OAAQ,YAGV,OACE,yBAAKvC,UAAU,0BACZkC,EAAclB,OACbkB,EAAclB,MAAMZ,KAAI,SAACoC,GAKvB,OAJAC,YACE,kBAAMT,EAAS,CAAEU,KAAM,cAAe/E,GAAI6E,EAAK7E,OAC/C,KAGA,yBAAKuD,MAAOA,EAAOb,IAAKmC,EAAK7E,GAAIqC,UAAU,qBACzC,2BAAIwC,EAAKG,SACT,yBACE3C,UAAU,mBACVyB,QAAS,kBAAMO,EAAS,CAAEU,KAAM,cAAe/E,GAAI6E,EAAK7E,OAExD,kBAAC,IAAD,CACEyD,KAAMwB,IACN5C,UAAU,+BAMrBkC,EAAcpB,QACboB,EAAcpB,OAAOV,KAAI,SAACyC,GAKxB,OAJAJ,YACE,kBAAMT,EAAS,CAAEU,KAAM,eAAgB/E,GAAIkF,EAAMlF,OACjD,KAGA,yBAAKuD,MAAOA,EAAOb,IAAKwC,EAAMlF,GAAIqC,UAAU,sBAC1C,2BAAI6C,EAAMF,SACV,yBACE3C,UAAU,yBACVyB,QAAS,kBAAMO,EAAS,CAAEU,KAAM,eAAgB/E,GAAIkF,EAAMlF,OAE1D,kBAAC,IAAD,CAAiByD,KAAMwB,a,OCrDjCE,EAAe,CACnB9B,MAAO,GACPF,OAAQ,IAmBGiC,EAAU,SAACJ,GACtB,MAAO,CACLD,KAAM,WACNC,YAGSK,EAAW,SAACL,GACvB,MAAO,CACLD,KAAM,YACNC,YAIEM,EAAQ,kBAAMC,KAAKC,MAAsB,IAAhBD,KAAKE,WAyCrBC,EAvCC,WAAmC,IAAlCxC,EAAiC,uDAAzBiC,EAAcQ,EAAW,uCAChD,OAAQA,EAAOZ,MACb,IAAK,WACH,OAAO,2BACF7B,GADL,IAEEG,MAAOH,EAAMG,MAAMuC,OAAO,CACxBZ,QAASW,EAAOX,QAChBhF,GAAG,QAAD,OAAUsF,SAGlB,IAAK,YACH,OAAO,2BACFpC,GADL,IAEEC,OAAQD,EAAMC,OAAOyC,OAAO,CAC1BZ,QAASW,EAAOX,QAChBhF,GAAG,SAAD,OAAWsF,SAGnB,IAAK,cACH,OAAO,2BACFpC,GADL,IAEEG,MAAOH,EAAMG,MAAMpB,QACjB,SAACe,GAAD,OAAkBA,EAAahD,KAAO2F,EAAO3F,QAGnD,IAAK,eACH,OAAO,2BACFkD,GADL,IAEEC,OAAQD,EAAMC,OAAOlB,QACnB,SAACe,GAAD,OAAkBA,EAAahD,KAAO2F,EAAO3F,QAGnD,IAAK,QACH,OAAOmF,EACT,QACE,OAAOjC,IC9DP2C,EAAW,kBAAMN,KAAKC,MAAsB,IAAhBD,KAAKE,WAmQxBK,MAjQf,WAAyB,IAAD,EACInF,mBAAS,IADb,mBACfoF,EADe,KACRC,EADQ,OAEYrF,mBAAS,IAFrB,mBAEfsF,EAFe,KAEJC,EAFI,KAIhBC,EAAUC,cACV/B,EAAWC,cAEjBlD,qBAAU,WACR7B,QAAQC,IAAIyG,KACX,CAACA,IAEJ,IA2GMI,EAAU,uCAAG,WAAOC,GAAP,mBAAA5G,EAAA,yDACjB4G,EAAEC,iBADe,SAGTpD,EAAS,GAEV4C,GACH5C,EAAOqD,KAAK,iCAEVT,EAAM3C,OAAS,KACjBD,EAAOqD,KAAK,qBA8BgB,KAF9BC,GA1BIA,EAAiBR,EAAUxD,KAAI,SAACiE,GAelC,OAdKA,EAASX,OACZ5C,EAAOqD,KAAK,oBAEdE,EAASC,QAAQC,SAAQ,SAACC,GAOxB,GANKA,EAAOA,QACV1D,EAAOqD,KAAK,mBAEVK,EAAOA,OAAOzD,OAAS,IACzBD,EAAOqD,KAAK,qCAEVrD,EAAOC,OAAS,EAClB,MAAMD,KAGH,CACL4B,KAAM,aACN+B,KAAMJ,EAASX,MACfA,MAAOW,EAASX,MAChBgB,YAAY,EACZC,SAAU,EACVL,QAASD,EAASC,QACflE,KAAI,SAACP,GAAD,OAAUA,EAAK2E,QAAU3E,EAAK2E,UAClC5E,OAAOgF,cAGkBhF,OAAOgF,UAEpB7D,QACjBD,EAAOqD,KAAK,uCAEVrD,EAAOC,OAAS,GA1CL,uBA2CPD,EA3CO,eA8CT+D,EAAYC,KAAKC,UAAUX,GA9ClB,UAgDTpF,EAAenB,OAAO,CAC1BmH,OAAQH,EACRnB,UAlDa,QAqDf1B,EAASe,EAAQ,wCACjBe,EAAQK,KAAK,KAtDE,kDAwDXc,MAAMC,QAAN,MACF,KAAI9E,KAAI,SAACyC,GAAD,OAAWb,EAASgB,EAASH,OAErCb,EAASgB,EAAS,KAAIxF,SAASC,KAAK0H,UA3DvB,0DAAH,sDAgEhB,OACE,0BAAMnF,UAAU,2BACd,0BAAMoF,SAAUpB,EAAYhE,UAAU,eACpC,+BACE,2BAAOA,UAAU,gBAAjB,gBACA,2BACE0C,KAAK,OACL2C,MAAO3B,EACP4B,SAAU,SAACrB,GAAD,OAAON,EAASM,EAAEsB,OAAOF,WAGtCzB,EAAUxD,KAAI,SAACiE,EAAUmB,GACxB,IAAIC,EAAS,eAAWD,GACxB,OACE,yBAAKnF,IAAKgE,EAAS1G,GAAIqC,UAAU,gBAC/B,+BACE,gDACA,2BACE0C,KAAK,OACL+B,KAAMgB,EACNH,SAAU,SAACrB,GAAD,OA7KH,SAACA,EAAGtG,GACzB,IACEkG,EACED,EAAUxD,KAAI,SAACiE,GAAD,OACZA,EAAS1G,KAAOA,EAAhB,2BAES0G,GAFT,IAGMX,MAAOO,EAAEsB,OAAOF,MAChBf,QAAQ,YAAKD,EAAQ,WAEvBA,MAGR,MAAOqB,GACP1D,EAASgB,EAAS0C,EAAIP,WA+JOQ,CAAe1B,EAAGI,EAAS1G,KAC5CiI,WAAS,KAGb,4BACEnE,QAAS,kBAhKA,SAACoE,GACtB,IACEhC,EAAaD,EAAUhE,QAAO,SAACkG,GAAD,OAAWD,IAAeC,EAAMnI,OAC9D,MAAO+H,GACP1D,EAASgB,EAAS0C,EAAIP,WA4JGY,CAAe1B,EAAS1G,KACvCqC,UAAU,oBACVK,IAAKmF,GAEL,kBAAC,IAAD,CAAiBpE,KAAM4E,OAExB3B,EAASC,QAAQlE,KAAI,SAACoE,EAAQyB,GAC7B,IAAMC,EAAW,gBAAYD,GAC7B,OACE,yBAAKjG,UAAU,cAAcK,IAAKmE,EAAO7G,IACvC,+BACE,6CACA,2BACE+E,KAAK,OACL1C,UAAU,eACVyE,KAAMyB,EACNC,YAAY,gBACZb,SAAU,SAACrB,GAAD,OAjJX,SAACA,EAAGtG,EAAI6H,GAC3B,IACE,GAAIvB,EAAEsB,OAAOF,MAAMtE,OAAS,GAC1B,MAAM,IAAIqF,MAAM,sCAElBvC,EACED,EAAUxD,KAAI,SAACiE,GAAD,OACZA,EAAS1G,KAAOA,EAAhB,2BAES0G,GAFT,IAGMC,QAASD,EAAQ,QAAYjE,KAAI,SAACiG,EAAWJ,GAAZ,OAC/BI,EAAU1I,KAAO6H,EAAjB,2BACSa,GADT,IACoB7B,OAAQP,EAAEsB,OAAOF,QACjCgB,OAGRhC,MAGR,MAAOqB,GACP1D,EAASgB,EAAS0C,EAAIP,WA8HFmB,CAAarC,EAAGI,EAAS1G,GAAI6G,EAAO7G,KAEtCiI,WAAS,KAGb,4BACE5F,UAAU,oBACVyB,QAAS,kBAjIR,SAAC8E,EAAYN,GAChCpC,EACED,EAAUxD,KAAI,SAACiE,GAAD,OACZA,EAAS1G,KAAO4I,EAAhB,2BAESlC,GAFT,IAGMC,QAASD,EAAQ,QAAYzE,QAC3B,SAACC,GAAD,OAAUA,EAAKlC,KAAOsI,OAG1B5B,MAuHyBmC,CAAanC,EAAS1G,GAAI6G,EAAO7G,MAEhD,kBAAC,IAAD,CAAiByD,KAAM4E,WAK/B,4BACEhG,UAAU,WACVyB,QAAS,SAACwC,GAAD,OA1LL,SAACA,EAAGtG,GACpBsG,EAAEC,iBACF,IACEL,EACED,EAAUxD,KAAI,SAACiE,GACb,GAAIA,EAAS1G,KAAOA,GAAM0G,EAASC,QAAQvD,QAAU,EACnD,MAAM,IAAIqF,MAAM,+BAElB,OAAO/B,EAAS1G,KAAOA,EAAhB,2BAEE0G,GAFF,IAGDC,QAASD,EAASC,QAAQf,OAAO,CAC/B5F,GAAI6F,IACJgB,OAAQ,OAGZH,MAGR,MAAOqB,GACP1D,EAASgB,EAAS0C,EAAIP,WAsKIsB,CAAUxC,EAAGI,EAAS1G,MAFxC,kBASN,4BAAQ8D,QA7OM,SAACwC,GACnBA,EAAEC,iBACF,IACE,GAAIN,EAAU7C,QAAU,EACtB,MAAM,IAAIqF,MAAM,gCAElBvC,EACED,EAAUL,OAAO,CACf5F,GAAI6F,IACJE,MAAO,GACPY,QAAS,MAGb,MAAOoB,GACP1D,EAASgB,EAAS0C,EAAIP,YA+NUnF,UAAU,YAAxC,gBAGA,4BAAQA,UAAU,mBAAlB,a,gBCtLO0G,MA5Ef,YAAgC,IAAd/I,EAAa,EAAbA,GAAI+F,EAAS,EAATA,MAAS,EACKpF,mBAAS,IADd,mBACtBqI,EADsB,KACXC,EADW,OAEetI,mBAAS,IAFxB,mBAEtBuI,EAFsB,KAENC,EAFM,KAI7B,SAASC,EAAeC,GAEtB,IADA,IAAMC,EAAM,GACLA,EAAIlG,QAAUiG,GAAM,CACzB,IAAIE,EAAQ,MAAS,GAAK,IAAMhE,KAAKE,SAAY,GAAG+D,SAAS,IAC7DF,EAAI9C,KAAK+C,GAEX,OAAOD,EA6CT,OALAlI,qBAAU,WAnCRC,EAAepB,WAAWD,GAAIsB,MAAK,SAACgI,GAClC,IAAIrD,EAAS,YAAO,IAAIwD,IAAIH,EAAI7G,KAAI,SAACP,GAAD,OAAUA,EAAKwH,mBACnDP,EAAkB,GAAD,mBAAKD,GAAL,YAAwBjD,KAKzC,IAJA,IAAI0D,EAAWrC,MAAMsC,KAAK,CAAExG,OAAQ6C,EAAU7C,SAAU,SAACyG,EAAGC,GAC1D,MAAO,CAAEpD,SAAUT,EAAU6D,GAAIC,OAAQ,GAAIjK,KAAM,OAJX,WAOjCgK,GACPR,EAAI1C,SAAQ,SAAC1E,GACPA,EAAI,gBAAsByH,EAASG,GAAGpD,WACxCiD,EAASG,GAAGC,OAAOvD,KAAKtE,EAAK2E,QAC7B8C,EAASG,GAAGhK,KAAK0G,KAAKtE,EAAK8H,YAJxBF,EAAI,EAAGA,EAAIH,EAASvG,OAAQ0G,IAAM,EAAlCA,GAQTb,EACED,EAAUpD,OACR+D,EAASlH,KAAI,SAACP,GACZ,MAAO,CACL6H,OAAQ7H,EAAK6H,OACbE,SAAU,CACR,CACEC,MAAO,qBACPpK,KAAMoC,EAAKpC,KACXqK,gBAAiBf,EAAelH,EAAKpC,KAAKsD,QAC1CgH,YAAa,eAa1B,IAGD,yBAAK/H,UAAU,UACb,uBAAGA,UAAU,eAAe0D,GAC3BiD,EAAUvG,KAAI,SAAC4H,EAAOxC,GACrB,OACE,yBAAKnF,IAAKmF,EAAOxF,UAAU,SACzB,wBAAIA,UAAU,kBAAkB6G,EAAerB,IAC/C,kBAAC,MAAD,CACE/H,KAAMuK,EACNC,QAAS,CACPC,YAAY,EACZC,4BAA6B,aCM9BC,MAtEf,SAAsBC,GAAQ,IAAD,EACK/J,oBAAS,GADd,mBACpBgK,EADoB,KACVC,EADU,OAEDjK,oBAAS,GAFR,mBAEpBkK,EAFoB,KAEbC,EAFa,OAGHnK,mBAAS,IAHN,mBAGpBoK,EAHoB,KAGdC,EAHc,OAIDrK,mBAAS,IAJR,mBAIpBoF,EAJoB,KAIbC,EAJa,OAKiBrF,oBAAS,GAL1B,mBAKpBsK,EALoB,KAKJC,EALI,KAOrBlL,EAAK0K,EAAMS,MAAMC,OAAOpL,GA6B9B,OA3BAoB,qBAAU,WACRC,EAAetB,UAAUC,GAAIsB,MAAK,SAAC+J,GACjC,IAAMC,EAAkBnE,KAAKoE,MAAMF,EAAIG,cACvCR,EAAQ,CAAE/E,UAAWqF,IACrBtF,EAASqF,EAAII,kBAEd,CAACzL,IAEJoB,qBAAU,WACU2C,OAAOC,aAAa0H,QAApB,qBAA0C1L,KAE1D8K,GAAS,KAGV,IAcD,0BAAMzI,UAAU,eACbsI,GAAY,uBAAGtI,UAAU,oBACxBwI,EAuBA,yBAAKxI,UAAU,gBACb,kBAAC,EAAD,CAAQrC,GAAIA,EAAI+F,MAAOA,KAvBzB,oCACE,kBAAC,SAAD,CACEgF,KAAMA,EACNY,kBAAkB,EAClBC,WAAY,SAACC,GAAD,OAnBtB,SAAoBA,GAClBxK,EAAeb,YAAY,CACzBV,KAAM+L,EAAO/L,KACbE,OAEF+D,OAAOC,aAAa8H,QAApB,qBAA0C9L,IAAM,GAChD4K,GAAY,GACZ9F,YAAW,WACTf,OAAOG,SAASC,WACf,MAU6ByH,CAAWC,MAErC,yBAAKxJ,UAAU,gBACb,4BACEA,UAAU,cACVyB,QAAS,kBAAMoH,GAAmBD,KAEjCA,EAAiB,cAAgB,eAEpC,yBACE5I,UAAU,kBACVkB,MAAO,CAAEiB,QAASyG,EAAiB,GAAK,SAExC,kBAAC,EAAD,CAAQjL,GAAIA,EAAI+F,MAAOA,SC7CtB,GACbgG,SAfY,uCAAG,WAAOC,GAAP,eAAAtM,EAAA,+EAEUC,IAAMY,KAJjB,aAI+ByL,GAF9B,cAEPnM,EAFO,yBAGNA,EAASC,MAHH,oGAAH,sDAgBZmM,MAPS,uCAAG,WAAOC,GAAP,eAAAxM,EAAA,sEACWC,IAAMY,KAAK,aAAc2L,GADpC,cACNrM,EADM,yBAELA,EAASC,MAFJ,2CAAH,uDCiEIqM,MAvEf,YAA6B,IAATtJ,EAAQ,EAARA,KAAQ,EACMlC,mBAAS,IADf,mBACnByL,EADmB,KACTC,EADS,OAEM1L,mBAAS,IAFf,mBAEnB2L,EAFmB,KAETC,EAFS,OAGoB5L,mBAAS,IAH7B,mBAGnB6L,EAHmB,KAGFC,EAHE,KAKpBpI,EAAWC,cACX6B,EAAUC,cAEhBhF,qBAAU,WACJyB,GACFsD,EAAQK,KAAK,QAIjB,IAAMkG,EAAY,uCAAG,WAAOpG,GAAP,mBAAA5G,EAAA,yDACnB4G,EAAEC,iBADiB,SAGXpD,EAAS,GACXmJ,IAAaE,GACfrJ,EAAOqD,KAAK,yCAEQ,IAAlBrD,EAAOC,OAPM,sBAQTD,EARS,uBAUXwJ,EAAYZ,SAAS,CAAEK,WAAUE,aAVtB,wBAWMK,EAAYV,MAAM,CAAEG,WAAUE,aAXpC,QAWXzM,EAXW,OAYXV,EAAQgI,KAAKC,UAAUvH,GAC7BkE,OAAOC,aAAa8H,QAAQ,aAAc3M,GAC1CkF,EAASe,EAAQ,iCACjBN,YAAW,WACTqB,EAAQK,KAAK,KACbzC,OAAOG,SAASC,WACf,MAlBc,kDAoBbmD,MAAMC,QAAN,MACF,KAAIX,SAAQ,SAACgG,GAAD,OAAiBvI,EAASgB,EAASuH,OACtC,MAAO,KAAI/M,UACpBwE,EAASgB,EAAS,KAAIxF,SAASC,KAAK0H,UAvBrB,0DAAH,sDA2BlB,OACE,yBAAKnF,UAAU,yBACb,0BAAMoF,SAAUiF,GACd,2CACA,2BACE3H,KAAK,OACL2C,MAAO0E,EACPzE,SAAU,SAACrB,GAAD,OAAO+F,EAAY/F,EAAEsB,OAAOF,UACrC,IACH,6BACA,2CACA,2BACE3C,KAAK,WACL2C,MAAO4E,EACP3E,SAAU,SAACrB,GAAD,OAAOiG,EAAYjG,EAAEsB,OAAOF,UACrC,IACH,6BACA,mDACA,2BACE3C,KAAK,WACL2C,MAAO8E,EACP7E,SAAU,SAACrB,GAAD,OAAOmG,EAAmBnG,EAAEsB,OAAOF,UAC5C,IACH,6BACA,+CCOOmF,MAzEf,YAA0B,IAAThK,EAAQ,EAARA,KACTwB,EAAWC,cAEX6B,EAAUC,cAChBhF,qBAAU,WACJyB,GACFsD,EAAQK,KAAK,OAEd,CAAC3D,EAAMsD,IARa,MAUSxF,mBAAS,IAVlB,mBAUhByL,EAVgB,KAUNC,EAVM,OAWS1L,mBAAS,IAXlB,mBAWhB2L,EAXgB,KAWNC,EAXM,OAYK5L,oBAAS,GAZd,mBAYhBmM,EAZgB,KAYRC,EAZQ,iDAcvB,WAAyBzG,GAAzB,mBAAA5G,EAAA,yDACE4G,EAAEC,iBACIpD,EAAS,GAFjB,SAISiJ,GACHjJ,EAAOqD,KAAK,uBAET8F,GACHnJ,EAAOqD,KAAK,uBAEQ,IAAlBrD,EAAOC,OAVf,sBAWYD,EAXZ,uBAa2BwJ,EAAYV,MAAM,CAAEG,WAAUE,aAbzD,OAaUzM,EAbV,OAcUV,EAAQgI,KAAKC,UAAUvH,GAC7BkE,OAAOC,aAAa8H,QAAQ,aAAc3M,GAC1CkF,EAASe,EAAQ,SAAD,OAAUgH,KAC1BtH,YAAW,WACTqB,EAAQK,KAAK,KACbzC,OAAOG,SAASC,WACf,MACH4I,GAAU,GArBd,kDAuBQzF,MAAMC,QAAN,MACF,KAAIX,SAAQ,SAACgG,GACXvI,EAASgB,EAASuH,OAEX,KAAI/M,UAAY,KAAIA,SAASC,KACtCuE,EAASgB,EAAS,KAAIxF,SAASC,KAAK0H,UAEpCnD,EAASgB,EAAS,KAAImC,UA9B5B,2DAduB,sBAgDvB,OACE,yBAAKnF,UAAU,0BACXyK,GACA,0BAAMrF,SAnDW,6CAoDf,4CACA,2BACE1C,KAAK,OACL2C,MAAO0E,EACPzE,SAAU,SAACrB,GAAD,OAAO+F,EAAY/F,EAAEsB,OAAOF,UACrC,IACH,6BACA,6CACA,2BACE3C,KAAK,WACL2C,MAAO4E,EACP3E,SAAU,SAACrB,GAAD,OAAOiG,EAAYjG,EAAEsB,OAAOF,UACrC,IACH,6BACA,4CCxDKsF,MAZf,WACE,OACE,yBAAK3K,UAAU,WACb,wBAAIkB,MAAO,CAAE0J,SAAU,MAAO1D,MAAO,QAArC,OACA,qEACA,uBAAGhG,MAAO,CAAE2J,UAAW,KAAvB,WACU,uBAAG1K,KAAK,KAAR,QAAqB,OCQ5B2K,gBAAqBC,WAAW,UA6B1BC,MA1Bf,WAAgB,IAAD,EACW1M,mBAAS,IADpB,mBACNkC,EADM,KACAyK,EADA,KAUb,OAPAlM,qBAAU,WACR,IAAMmM,EAASpG,KAAKoE,MAAMxH,OAAOC,aAAa0H,QAAQ,eAClD6B,GAAUA,EAAOnB,WACnB/K,EAAejC,SAASmO,EAAOpO,OAC/BmO,EAAQC,EAAOnB,aAEhB,IAED,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAQvJ,KAAMA,IACd,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOc,OAAK,EAAC6J,KAAK,qBAAqBC,UAAW3H,IAClD,kBAAC,IAAD,CAAOnC,OAAK,EAAC6J,KAAK,yBAAyBC,UAAWhD,IACtD,kBAAC,IAAD,CAAO+C,KAAK,YAAYC,UAAWtB,IACnC,kBAAC,IAAD,CAAOqB,KAAK,SAASC,UAAWZ,IAChC,kBAAC,IAAD,CAAOlJ,OAAK,EAAC6J,KAAK,IAAIC,UAAW/M,IACjC,kBAAC,IAAD,CAAOgN,MAAM,IAAID,UAAWT,O,QCpCrBW,EAFDC,YAAYC,GCI1BC,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,OAEFK,SAASC,eAAe,U","file":"static/js/main.023abff4.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/survey/\";\r\n\r\nlet token = null;\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst getToken = () => {\r\n  console.log(token);\r\n};\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(`${baseUrl}/all`);\r\n  return response.data;\r\n};\r\n\r\nconst getSingle = async (id) => {\r\n  const response = await axios.get(`${baseUrl}/single/${id}`);\r\n  return response.data;\r\n};\r\n\r\nconst getResults = async (id) => {\r\n  const response = await axios.get(`${baseUrl}/results/${id}`);\r\n  return response.data;\r\n};\r\n\r\nconst create = async (surveyObj) => {\r\n  const config = { headers: { Authorization: token } };\r\n  const response = await axios.post(`${baseUrl}/create`, surveyObj, config);\r\n  return response.data;\r\n};\r\n\r\nconst updateVotes = async (updatedObj) => {\r\n  const response = await axios.post(`${baseUrl}/updateVotes`, updatedObj);\r\n  return response.data;\r\n};\r\n\r\nexport default {\r\n  setToken,\r\n  getToken,\r\n  getAll,\r\n  getSingle,\r\n  getResults,\r\n  create,\r\n  updateVotes,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport surveyServices from \"../services/surveyServices\";\r\n\r\nfunction Homepage() {\r\n  const [activeSurveys, setActiveSurveys] = useState([]);\r\n  const [offSurveys, setOffSurveys] = useState([]);\r\n  const [recentSurveys, setRecentSurveys] = useState([]);\r\n  const [popularSurveys, setPopularSurveys] = useState([]);\r\n  useEffect(() => {\r\n    surveyServices.getAll().then((response) => {\r\n      const { surveys, popular } = response;\r\n      const newestArr = surveys\r\n        .sort((a, b) => new Date(b.created_at) - new Date(a.created_at))\r\n        .slice(0, 2);\r\n      const dateNow = new Date();\r\n      const onSurveys = surveys.filter(\r\n        (elem) => new Date(elem.deadline) > dateNow\r\n      );\r\n      const off = surveys.filter((elem) => dateNow > new Date(elem.deadline));\r\n      setActiveSurveys(onSurveys);\r\n      setOffSurveys(off);\r\n      setRecentSurveys([...recentSurveys, ...newestArr]);\r\n      setPopularSurveys([...popularSurveys, ...popular]);\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <img\r\n        src=\"/img/happy.jpg\"\r\n        alt=\"Sad Muppet Moss from Sesame Streets\"\r\n        className=\"homepage-img\"\r\n      />\r\n      <p>This is big data place and you are here.</p> <br />\r\n      <p>\r\n        Sign up or Log In to create survey. Yup, you are thrilled. I am\r\n        thrilled. This is amazing. Posibility are endless.{\" \"}\r\n      </p>{\" \"}\r\n      <br />\r\n      <p>\r\n        Check <a href=\"#recent\">recent surveys</a> or{\" \"}\r\n        <a href=\"#popular\">popular surveys</a>\r\n      </p>\r\n      <section className=\"homepage-survey-block\" id=\"on\">\r\n        <p>Active surveys:</p>\r\n        {activeSurveys.map((elem) => (\r\n          <div key={elem.id}>\r\n            <a href={`/api/survey/single/${elem.id}`}>{elem.survey_name}</a>\r\n          </div>\r\n        ))}\r\n      </section>\r\n      <section className=\"homepage-survey-block\" id=\"off\">\r\n        <p>Past surveys:</p>\r\n        {offSurveys.map((elem) => (\r\n          <div>\r\n            <a key={elem.id} href={`/api/survey/single/${elem.id}`}>\r\n              {elem.survey_name}\r\n            </a>\r\n          </div>\r\n        ))}\r\n      </section>\r\n      <section className=\"homepage-survey-block\" id=\"recent\">\r\n        <p>Most recent surveys:</p>\r\n        {recentSurveys.map((elem) => (\r\n          <div key={elem.id}>\r\n            <a href={`/api/survey/single/${elem.id}`}>{elem.survey_name}</a>\r\n          </div>\r\n        ))}\r\n      </section>\r\n      <section className=\"homepage-survey-block\" id=\"popular\">\r\n        <p>Most popular surveys:</p>\r\n        {popularSurveys.map((elem) => (\r\n          <div key={elem.id}>\r\n            <a href={`/api/survey/single/${elem.id}`}>{elem.survey_name}</a>\r\n          </div>\r\n        ))}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Header({ user }) {\r\n  const [logoVisible, setLogoVisible] = useState(true);\r\n  const notification = useSelector((state) => state);\r\n\r\n  useEffect(() => {\r\n    if (notification.errors.length > 0 || notification.infos.length > 0) {\r\n      setLogoVisible(false);\r\n    } else {\r\n      setLogoVisible(true);\r\n    }\r\n  }, [notification.errors.length, notification.infos.length, user]);\r\n  const logOut = () => {\r\n    window.localStorage.clear();\r\n    window.location.reload();\r\n  };\r\n  return (\r\n    <header>\r\n      <nav roleplay=\"navigation\">\r\n        <img\r\n          src=\"/img/pie.jpg\"\r\n          alt=\"Pie Chart Logo\"\r\n          style={{ visibility: logoVisible ? \"visible\" : \"hidden\" }}\r\n        />\r\n        <div className=\"nav-links\">\r\n          {user ? (\r\n            <>\r\n              <button className=\"user-name\">\r\n                <FontAwesomeIcon icon={faUser} /> {user}\r\n              </button>\r\n              <NavLink exact to=\"/\" activeClassName=\"nav-active\">\r\n                Homepage\r\n              </NavLink>\r\n              <NavLink\r\n                exact\r\n                to=\"/api/survey/create\"\r\n                activeClassName=\"nav-active\"\r\n              >\r\n                Create Survey\r\n              </NavLink>\r\n\r\n              <button className=\"user-control\" onClick={logOut}>\r\n                Log Out\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <NavLink exact to=\"/\" activeClassName=\"nav-active\">\r\n                Homepage\r\n              </NavLink>\r\n              <NavLink to=\"/register\" activeClassName=\"nav-active\">\r\n                Sign Up\r\n              </NavLink>\r\n              <NavLink to=\"/login\" activeClassName=\"nav-active\">\r\n                Sign In\r\n              </NavLink>\r\n            </>\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Notification() {\r\n  const dispatch = useDispatch();\r\n  const notifications = useSelector((state) => state);\r\n\r\n  const style = {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    padding: 10,\r\n    width: \"99%\",\r\n    margin: \"5px auto\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"notification-container\">\r\n      {notifications.infos &&\r\n        notifications.infos.map((info) => {\r\n          setTimeout(\r\n            () => dispatch({ type: \"REMOVE_INFO\", id: info.id }),\r\n            3000\r\n          );\r\n          return (\r\n            <div style={style} key={info.id} className=\"info-notification\">\r\n              <p>{info.content}</p>\r\n              <div\r\n                className=\"btn-notification\"\r\n                onClick={() => dispatch({ type: \"REMOVE_INFO\", id: info.id })}\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon={faWindowClose}\r\n                  className=\"btn-info-notification\"\r\n                />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      {notifications.errors &&\r\n        notifications.errors.map((error) => {\r\n          setTimeout(\r\n            () => dispatch({ type: \"REMOVE_ERROR\", id: error.id }),\r\n            3000\r\n          );\r\n          return (\r\n            <div style={style} key={error.id} className=\"error-notification\">\r\n              <p>{error.content}</p>\r\n              <div\r\n                className=\"btn-error-notification\"\r\n                onClick={() => dispatch({ type: \"REMOVE_ERROR\", id: error.id })}\r\n              >\r\n                <FontAwesomeIcon icon={faWindowClose} />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notification;\r\n","const initialState = {\r\n  infos: [],\r\n  errors: [],\r\n};\r\n\r\n// export const newInfoNotification = (info, time) => {\r\n//   return async (dispatch) => {\r\n//     await setTimeout(\r\n//       () =>\r\n//         dispatch({\r\n//           type: \"RESET_NOTIFICATIONS\",\r\n//         }),\r\n//       time\r\n//     );\r\n//     dispatch({\r\n//       type: \"NEW_INFO\",\r\n//       info,\r\n//     });\r\n//   };\r\n// };\r\n\r\nexport const newInfo = (content) => {\r\n  return {\r\n    type: \"NEW_INFO\",\r\n    content,\r\n  };\r\n};\r\nexport const newError = (content) => {\r\n  return {\r\n    type: \"NEW_ERROR\",\r\n    content,\r\n  };\r\n};\r\n\r\nconst getId = () => Math.floor(Math.random() * 100000);\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"NEW_INFO\":\r\n      return {\r\n        ...state,\r\n        infos: state.infos.concat({\r\n          content: action.content,\r\n          id: `info-${getId()}`,\r\n        }),\r\n      };\r\n    case \"NEW_ERROR\":\r\n      return {\r\n        ...state,\r\n        errors: state.errors.concat({\r\n          content: action.content,\r\n          id: `error-${getId()}`,\r\n        }),\r\n      };\r\n    case \"REMOVE_INFO\":\r\n      return {\r\n        ...state,\r\n        infos: state.infos.filter(\r\n          (notification) => notification.id !== action.id\r\n        ),\r\n      };\r\n    case \"REMOVE_ERROR\":\r\n      return {\r\n        ...state,\r\n        errors: state.errors.filter(\r\n          (notification) => notification.id !== action.id\r\n        ),\r\n      };\r\n    case \"RESET\":\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { newError, newInfo } from \"../reducers/notificationReducer\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport surveyServices from \"../services/surveyServices\";\r\n\r\nconst randomId = () => Math.floor(Math.random() * 100000);\r\n\r\nfunction CreateSurvey() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    console.log(questions);\r\n  }, [questions]);\r\n\r\n  const addQuestion = (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (questions.length >= 5) {\r\n        throw new Error(\"You can add up to 5 question\");\r\n      }\r\n      setQuestions(\r\n        questions.concat({\r\n          id: randomId(),\r\n          title: \"\",\r\n          choices: [],\r\n        })\r\n      );\r\n    } catch (err) {\r\n      dispatch(newError(err.message));\r\n    }\r\n  };\r\n\r\n  const updateQuestion = (e, id) => {\r\n    try {\r\n      setQuestions(\r\n        questions.map((question) =>\r\n          question.id === id\r\n            ? {\r\n                ...question,\r\n                title: e.target.value,\r\n                choices: [...question[\"choices\"]],\r\n              }\r\n            : question\r\n        )\r\n      );\r\n    } catch (err) {\r\n      dispatch(newError(err.message));\r\n    }\r\n  };\r\n\r\n  const removeQuestion = (questionId) => {\r\n    try {\r\n      setQuestions(questions.filter((quest) => questionId !== quest.id));\r\n    } catch (err) {\r\n      dispatch(newError(err.message));\r\n    }\r\n  };\r\n\r\n  const addChoice = (e, id) => {\r\n    e.preventDefault();\r\n    try {\r\n      setQuestions(\r\n        questions.map((question) => {\r\n          if (question.id === id && question.choices.length >= 8) {\r\n            throw new Error(\"You can add up to 8 choices\");\r\n          }\r\n          return question.id === id\r\n            ? {\r\n                ...question,\r\n                choices: question.choices.concat({\r\n                  id: randomId(),\r\n                  choice: \"\",\r\n                }),\r\n              }\r\n            : question;\r\n        })\r\n      );\r\n    } catch (err) {\r\n      dispatch(newError(err.message));\r\n    }\r\n  };\r\n\r\n  const updateChoice = (e, id, index) => {\r\n    try {\r\n      if (e.target.value.length > 30) {\r\n        throw new Error(\"Max choice length is 30 characters\");\r\n      }\r\n      setQuestions(\r\n        questions.map((question) =>\r\n          question.id === id\r\n            ? {\r\n                ...question,\r\n                choices: question[\"choices\"].map((choiceObj, choiceIndex) =>\r\n                  choiceObj.id === index\r\n                    ? { ...choiceObj, choice: e.target.value }\r\n                    : choiceObj\r\n                ),\r\n              }\r\n            : question\r\n        )\r\n      );\r\n    } catch (err) {\r\n      dispatch(newError(err.message));\r\n    }\r\n  };\r\n\r\n  const removeChoice = (questIndex, choiceIndex) => {\r\n    setQuestions(\r\n      questions.map((question) =>\r\n        question.id === questIndex\r\n          ? {\r\n              ...question,\r\n              choices: question[\"choices\"].filter(\r\n                (elem) => elem.id !== choiceIndex\r\n              ),\r\n            }\r\n          : question\r\n      )\r\n    );\r\n  };\r\n\r\n  const submitForm = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const errors = [];\r\n\r\n      if (!title) {\r\n        errors.push(\"Select survey's title missing\");\r\n      }\r\n      if (title.length > 100) {\r\n        errors.push(\"Title is too long\");\r\n      }\r\n      let finalQuestions = questions.map((question) => {\r\n        if (!question.title) {\r\n          errors.push(\"Title is missing\");\r\n        }\r\n        question.choices.forEach((choice) => {\r\n          if (!choice.choice) {\r\n            errors.push(\"Choice is empty\");\r\n          }\r\n          if (choice.choice.length > 30) {\r\n            errors.push(\"Choice must be 30 characters long\");\r\n          }\r\n          if (errors.length > 0) {\r\n            throw errors;\r\n          }\r\n        });\r\n        return {\r\n          type: \"radiogroup\",\r\n          name: question.title,\r\n          title: question.title,\r\n          isRequired: true,\r\n          colCount: 1,\r\n          choices: question.choices\r\n            .map((elem) => elem.choice && elem.choice)\r\n            .filter(Boolean),\r\n        };\r\n      });\r\n      finalQuestions = finalQuestions.filter(Boolean);\r\n\r\n      if (finalQuestions.length === 0) {\r\n        errors.push(\"Questions and choices are missing\");\r\n      }\r\n      if (errors.length > 0) {\r\n        throw errors;\r\n      }\r\n\r\n      const finalJSON = JSON.stringify(finalQuestions);\r\n\r\n      await surveyServices.create({\r\n        survey: finalJSON,\r\n        title,\r\n      });\r\n\r\n      dispatch(newInfo(\"Your Survey is successfully created\"));\r\n      history.push(\"/\");\r\n    } catch (err) {\r\n      if (Array.isArray(err)) {\r\n        err.map((error) => dispatch(newError(error)));\r\n      } else {\r\n        dispatch(newError(err.response.data.message));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className=\"create-survey-container\">\r\n      <form onSubmit={submitForm} className=\"create-form\">\r\n        <label>\r\n          <small className=\"survey-title\">Survey Title</small>\r\n          <input\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n        </label>\r\n        {questions.map((question, index) => {\r\n          let inputName = `title${index}`;\r\n          return (\r\n            <div key={question.id} className=\"new-question\">\r\n              <label>\r\n                <small>Question name</small>\r\n                <input\r\n                  type=\"text\"\r\n                  name={inputName}\r\n                  onChange={(e) => updateQuestion(e, question.id)}\r\n                  autoFocus\r\n                />\r\n              </label>\r\n              <button\r\n                onClick={() => removeQuestion(question.id)}\r\n                className=\"close-elem-button\"\r\n                key={index}\r\n              >\r\n                <FontAwesomeIcon icon={faTimesCircle} />\r\n              </button>\r\n              {question.choices.map((choice, choiceIndex) => {\r\n                const inputChoice = `choice${choiceIndex}`;\r\n                return (\r\n                  <div className=\"new-choices\" key={choice.id}>\r\n                    <label>\r\n                      <small>Add Choice</small>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"input-choice\"\r\n                        name={inputChoice}\r\n                        placeholder=\"Choice Option\"\r\n                        onChange={(e) =>\r\n                          updateChoice(e, question.id, choice.id)\r\n                        }\r\n                        autoFocus\r\n                      />\r\n                    </label>\r\n                    <button\r\n                      className=\"close-elem-button\"\r\n                      onClick={() => removeChoice(question.id, choice.id)}\r\n                    >\r\n                      <FontAwesomeIcon icon={faTimesCircle} />\r\n                    </button>\r\n                  </div>\r\n                );\r\n              })}\r\n              <button\r\n                className=\"btn-form\"\r\n                onClick={(e) => addChoice(e, question.id)}\r\n              >\r\n                Add Choice\r\n              </button>\r\n            </div>\r\n          );\r\n        })}\r\n        <button onClick={addQuestion} className=\"btn-form\">\r\n          Add Question\r\n        </button>\r\n        <button className=\"btn-form submit\">Submit</button>\r\n      </form>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default CreateSurvey;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport surveyServices from \"../services/surveyServices\";\r\n\r\nfunction Result({ id, title }) {\r\n  const [chartData, setChartData] = useState([]);\r\n  const [chartQuestions, setChartQuestions] = useState([]);\r\n\r\n  function getRandomColor(leng) {\r\n    const arr = [];\r\n    while (arr.length <= leng) {\r\n      var color = \"#\" + (((1 << 24) * Math.random()) | 0).toString(16);\r\n      arr.push(color);\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  //  question name, choices, choices_votes, title\r\n  const chart = () => {\r\n    surveyServices.getResults(id).then((arr) => {\r\n      var questions = [...new Set(arr.map((elem) => elem.question_name))];\r\n      setChartQuestions([...chartQuestions, ...questions]);\r\n      var finalArr = Array.from({ length: questions.length }, (v, i) => {\r\n        return { question: questions[i], labels: [], data: [] };\r\n      });\r\n\r\n      for (let i = 0; i < finalArr.length; i++) {\r\n        arr.forEach((elem) => {\r\n          if (elem[\"question_name\"] === finalArr[i].question) {\r\n            finalArr[i].labels.push(elem.choice);\r\n            finalArr[i].data.push(elem.score);\r\n          }\r\n        });\r\n      }\r\n      setChartData(\r\n        chartData.concat(\r\n          finalArr.map((elem) => {\r\n            return {\r\n              labels: elem.labels,\r\n              datasets: [\r\n                {\r\n                  label: \"level of something\",\r\n                  data: elem.data,\r\n                  backgroundColor: getRandomColor(elem.data.length),\r\n                  borderWidth: 4,\r\n                },\r\n              ],\r\n            };\r\n          })\r\n        )\r\n      );\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    chart();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"charts\">\r\n      <p className=\"chart-title\">{title}</p>\r\n      {chartData.map((chart, index) => {\r\n        return (\r\n          <div key={index} className=\"chart\">\r\n            <h2 className=\"chart-question\">{chartQuestions[index]}</h2>\r\n            <Pie\r\n              data={chart}\r\n              options={{\r\n                responsive: true,\r\n                responsiveAnimationDuration: 1000,\r\n              }}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Result;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport * as Survey from \"survey-react\";\r\nimport Result from \"./Result-example.js\";\r\nimport surveyServices from \"../services/surveyServices\";\r\n\r\nfunction SingleSurvey(props) {\r\n  const [complete, setComplete] = useState(false);\r\n  const [voted, setVoted] = useState(false);\r\n  const [json, setJson] = useState({});\r\n  const [title, setTitle] = useState(\"\");\r\n  const [resultsDisplay, setResultsDisplay] = useState(false);\r\n\r\n  const id = props.match.params.id;\r\n\r\n  useEffect(() => {\r\n    surveyServices.getSingle(id).then((res) => {\r\n      const stringQuestions = JSON.parse(res.surveyString);\r\n      setJson({ questions: stringQuestions });\r\n      setTitle(res.surveyTitle);\r\n    });\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    const checkItem = window.localStorage.getItem(`chartVoted-${id}`);\r\n    if (checkItem) {\r\n      setVoted(true);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  function onComplete(result) {\r\n    surveyServices.updateVotes({\r\n      data: result.data,\r\n      id,\r\n    });\r\n    window.localStorage.setItem(`chartVoted-${id}`, true);\r\n    setComplete(true);\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 1100);\r\n  }\r\n  return (\r\n    <main className=\"survey-page\">\r\n      {complete && <p className=\"survey-finished\"></p>}\r\n      {!voted ? (\r\n        <>\r\n          <Survey.Survey\r\n            json={json}\r\n            showCompletePage={false}\r\n            onComplete={(result) => onComplete(result)}\r\n          />\r\n          <div className=\"show-results\">\r\n            <button\r\n              className=\"btn-results\"\r\n              onClick={() => setResultsDisplay(!resultsDisplay)}\r\n            >\r\n              {resultsDisplay ? \"Hide Charts\" : \"Show Charts\"}\r\n            </button>\r\n            <div\r\n              className=\"visible-results\"\r\n              style={{ display: resultsDisplay ? \"\" : \"none\" }}\r\n            >\r\n              <Result id={id} title={title} />\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className=\"just-results\">\r\n          <Result id={id} title={title} />\r\n        </div>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default SingleSurvey;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/users\";\r\n\r\nconst register = async (newObj) => {\r\n  try {\r\n    const response = await axios.post(baseUrl, newObj);\r\n    return response.data;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nconst login = async (loginObj) => {\r\n  const response = await axios.post(\"/api/login\", loginObj);\r\n  return response.data;\r\n};\r\n\r\nexport default {\r\n  register,\r\n  login,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { newError, newInfo } from \"../reducers/notificationReducer\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport userService from \"../services/userServices\";\r\n\r\nfunction Register({ user }) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.push(\"/\");\r\n    }\r\n  });\r\n\r\n  const registerUser = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const errors = [];\r\n      if (password !== confirmPassword) {\r\n        errors.push(\"Password Confirmation does not match!\");\r\n      }\r\n      if (errors.length !== 0) {\r\n        throw errors;\r\n      }\r\n      await userService.register({ username, password });\r\n      const response = await userService.login({ username, password });\r\n      const token = JSON.stringify(response);\r\n      window.localStorage.setItem(\"loggedUser\", token);\r\n      dispatch(newInfo(\"Now you are registered user!\"));\r\n      setTimeout(() => {\r\n        history.push(\"/\");\r\n        window.location.reload();\r\n      }, 2500);\r\n    } catch (err) {\r\n      if (Array.isArray(err)) {\r\n        err.forEach((singleError) => dispatch(newError(singleError)));\r\n      } else if (err && err.response) {\r\n        dispatch(newError(err.response.data.message));\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"credentials-container\">\r\n      <form onSubmit={registerUser}>\r\n        <small>Username</small>\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />{\" \"}\r\n        <br />\r\n        <small>Password</small>\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />{\" \"}\r\n        <br />\r\n        <small>Confirm Password</small>\r\n        <input\r\n          type=\"password\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n        />{\" \"}\r\n        <br />\r\n        <button>Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport userService from \"../services/userServices\";\r\nimport { newInfo, newError } from \"../reducers/notificationReducer\";\r\n\r\nfunction Login({ user }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [user, history]);\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [signIn, setSignIn] = useState(false);\r\n\r\n  async function loginUser(e) {\r\n    e.preventDefault();\r\n    const errors = [];\r\n    try {\r\n      if (!username) {\r\n        errors.push(\"Username is missing\");\r\n      }\r\n      if (!password) {\r\n        errors.push(\"Password is missing\");\r\n      }\r\n      if (errors.length !== 0) {\r\n        throw errors;\r\n      }\r\n      const response = await userService.login({ username, password });\r\n      const token = JSON.stringify(response);\r\n      window.localStorage.setItem(\"loggedUser\", token);\r\n      dispatch(newInfo(`Hello ${username}`));\r\n      setTimeout(() => {\r\n        history.push(\"/\");\r\n        window.location.reload();\r\n      }, 1500);\r\n      setSignIn(true);\r\n    } catch (err) {\r\n      if (Array.isArray(err)) {\r\n        err.forEach((singleError) => {\r\n          dispatch(newError(singleError));\r\n        });\r\n      } else if (err.response && err.response.data) {\r\n        dispatch(newError(err.response.data.message));\r\n      } else {\r\n        dispatch(newError(err.message));\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"credentials-container\">\r\n      {!signIn && (\r\n        <form onSubmit={loginUser}>\r\n          <label>Username:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />{\" \"}\r\n          <br />\r\n          <label>Password: </label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />{\" \"}\r\n          <br />\r\n          <button>Login</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div className=\"mainbox\">\r\n      <h1 style={{ fontSize: \"5em\", color: \"red\" }}>404</h1>\r\n      <h1>There is no page you are looking for!</h1>\r\n      <p style={{ marginTop: 10 }}>\r\n        Back to <a href=\"/\">Home</a>{\" \"}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"survey-react/survey.css\";\nimport Homepage from \"./components/Homepage\";\nimport Header from \"./components/Header\";\nimport Notification from \"./components/Notification\";\nimport CreateSurvey from \"./components/CreateSurvey\";\nimport SingleSurvey from \"./components/SingleSurvey\";\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\nimport NotFound from \"./components/NotFound\";\n\nimport * as Survey from \"survey-react\";\n\nimport surveyServices from \"./services/surveyServices\";\n\n(function () {\n  return Survey.StylesManager.applyTheme(\"modern\");\n})();\n\nfunction App() {\n  const [user, setUser] = useState(\"\");\n\n  useEffect(() => {\n    const logged = JSON.parse(window.localStorage.getItem(\"loggedUser\"));\n    if (logged && logged.username) {\n      surveyServices.setToken(logged.token);\n      setUser(logged.username);\n    }\n  }, []);\n  return (\n    <Router>\n      <Header user={user} />\n      <Notification />\n      <Switch>\n        <Route exact path=\"/api/survey/create\" component={CreateSurvey} />\n        <Route exact path=\"/api/survey/single/:id\" component={SingleSurvey} />\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/login\" component={Login} />\n        <Route exact path=\"/\" component={Homepage} />\n        <Route patch=\"*\" component={NotFound} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { createStore } from \"redux\";\r\nimport notificationReducer from \"./reducers/notificationReducer\";\r\n\r\nconst store = createStore(notificationReducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}